name: "Godot Build Pipeline"
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GODOT_VERSION: 4.3
  PROJECT_NAME: GGJ2025

jobs:
  build:
    name: Build Game
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [windows, linux]
    
    container:
      image: barichello/godot-ci:4.3
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      
      - name: Build
        run: |
          mkdir -v -p build/${{ matrix.platform }}
          godot --headless --verbose --export-release "${{ matrix.platform }}" ./build/${{ matrix.platform }}/$PROJECT_NAME.${{ matrix.platform == 'windows' && 'exe' || 'x86_64' }}
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-${{ matrix.platform }}
          path: build/${{ matrix.platform }}
          retention-days: 14

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.sha }}
          tag_name: ${{ github.sha }}
          files: |
            ${{ env.PROJECT_NAME }}-windows/**
            ${{ env.PROJECT_NAME }}-linux/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 